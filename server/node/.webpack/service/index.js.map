{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///../../../Libs/node-services/crud-service/crud-service.js","webpack:///../../../Libs/node-services/gpt-service/gpt-service.js","webpack:///../../../Libs/node-services/utils/utils.js","webpack:///../../../server.js","webpack:///../../../src/knowledge-base/Knowledge/index.js","webpack:///../../../src/knowledge-base/api.js","webpack:///../../../utils/utils.js","webpack:///external commonjs \"@markab.io/node/acl-service/acl-service\"","webpack:///external commonjs \"@markab.io/node/forms-service/forms-service\"","webpack:///external commonjs \"@markab.io/node/media-service/media-service\"","webpack:///external commonjs \"@markab.io/node/viz-service/viz-service\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb/models/forms\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb/models/kernel\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb/models/knowledges\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb/models/lambda\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb/models/notifications\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb/models/permissions\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb/models/settings\"","webpack:///external commonjs \"@markab.io/orbital-api/MongoDb/models/user\"","webpack:///external commonjs \"axios\"","webpack:///external commonjs \"body-parser\"","webpack:///external commonjs \"config\"","webpack:///external commonjs \"cors\"","webpack:///external commonjs \"express\"","webpack:///external commonjs \"express-print-routes\"","webpack:///external commonjs \"express-session\"","webpack:///external commonjs \"mongoose\"","webpack:///external commonjs \"morgan\"","webpack:///external commonjs \"source-map-support/register\"","webpack:///external commonjs \"uuid\"","webpack:///external node-commonjs \"fs\"","webpack:///external node-commonjs \"http\"","webpack:///external node-commonjs \"path\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/harmony module decorator","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../../../index.js"],"sourcesContent":["const express = require(\"express\");\nconst { executeDomain } = require(\"../utils/utils\");\n\nconst crudService = function ({\n  Model,\n  crudDomainLogic: { create, read, update, del, search },\n}) {\n  const apiRoutes = express.Router();\n\n  apiRoutes.get(\"/\", async (req, res) => {\n    try {\n      const { criteria, isPermitted, populate, onResponse, exclude } =\n        executeDomain(req, res, read);\n      const query = criteria ? criteria.query : {};\n      if (!isPermitted) {\n        return res.status(409).send({\n          message: `You are not authorized to read ${Model.modelName}s`,\n        });\n      }\n      const exclusionList = exclude ? exclude.map((ex) => `-${ex}`).join(\" \") : \"\";\n      const data = await Model.find(query)\n        .sort(\"-createdAt\")\n        .populate(Array.isArray(populate) ? populate.join(\" \") : \"\")\n        .select(exclusionList)\n        .exec();\n\n      if (onResponse) {\n        onResponse({ data, count: data.length }, req, res);\n      } else {\n        res.status(200).send({ data, count: data.length });\n      }\n    } catch (err) {\n      res.status(500).send({ message: `Database connection error: ${err.message}` });\n    }\n  });\n\n  apiRoutes.get(\"/paginate/:page/:limit\", async (req, res) => {\n    try {\n      const { criteria, isPermitted, populate, onResponse, exclude } =\n        executeDomain(req, res, read);\n      const { query } = criteria;\n      const { page, limit } = req.params;\n      if (!isPermitted) {\n        return res.status(409).send({\n          message: `You are not authorized to read ${Model.modelName}s`,\n        });\n      }\n      const exclusionList = exclude ? exclude.map((ex) => `-${ex}`).join(\" \") : \"\";\n      const count = await Model.countDocuments(query).exec();\n      const data = await Model.paginate(query, {\n        page: parseInt(page),\n        limit: parseInt(limit),\n        select: exclusionList,\n        sort: \"-createdAt\",\n      });\n\n      if (onResponse) {\n        onResponse({ data: data.docs, count }, req, res);\n      } else {\n        res.status(200).send({ data: data.docs, count });\n      }\n    } catch (err) {\n      res.status(500).send({ message: `Database connection error: ${err.message}` });\n    }\n  });\n\n  apiRoutes.post(\"/create\", async (req, res) => {\n    try {\n      const { isPermitted, onResponse } = executeDomain(req, res, create);\n      const newModel = new Model(req.body.model);\n\n      if (Model.joiValidate) {\n        const { error } = Model.joiValidate(newModel);\n        if (error) {\n          return res.status(409).send({\n            message: `Error validating your input ${error}`,\n          });\n        }\n      }\n\n      if (!isPermitted) {\n        return res.status(409).send({\n          message: `You are not authorized to create this ${Model.modelName}`,\n        });\n      }\n\n      await newModel.save();\n\n      if (onResponse) {\n        onResponse(newModel, req, res);\n      } else {\n        res.status(200).send(newModel);\n      }\n    } catch (err) {\n      res.status(500).send({ message: `Database connection error: ${err.message}` });\n    }\n  });\n\n  apiRoutes.put(\"/\", async (req, res) => {\n    try {\n      const { criteria, isPermitted, onResponse } = executeDomain(req, res, update);\n      if (!isPermitted) {\n        return res.status(409).send({\n          message: `You are not authorized to update this ${Model.modelName}`,\n        });\n      }\n\n      const newModel = Object.assign({}, req.body.model);\n\n      if (Model.joiValidate) {\n        const { error } = Model.joiValidate(newModel);\n        if (error) {\n          return res.status(409).send({\n            message: `Error validating your input ${error}`,\n          });\n        }\n      }\n\n      const updatedModel = await Model.findOneAndUpdate(\n        { _id: newModel._id, ...criteria },\n        newModel,\n        { new: true, upsert: false }\n      ).exec();\n\n      if (onResponse) {\n        onResponse(updatedModel, req, res);\n      } else {\n        res.status(200).send(updatedModel);\n      }\n    } catch (err) {\n      res.status(500).send({ message: `Database connection error: ${err.message}` });\n    }\n  });\n\n  apiRoutes.delete(\"/:_id\", async (req, res) => {\n    try {\n      const requestModelID = req.params._id;\n      const { criteria, isPermitted } = executeDomain(req, res, del);\n      if (!isPermitted) {\n        return res.status(409).send({\n          message: `You are not authorized to delete this ${Model.modelName}`,\n        });\n      }\n      await Model.deleteOne({ _id: requestModelID, ...criteria }).exec();\n      res.status(200).send();\n    } catch (err) {\n      res.status(500).send({ message: `Database connection error: ${err.message}` });\n    }\n  });\n\n  apiRoutes.post(\"/search\", async (req, res) => {\n    try {\n      const query = req.body.query;\n      const { criteria, isPermitted, onResponse } = executeDomain(req, res, search);\n      if (!isPermitted) {\n        return res.status(409).send({\n          message: `You are not authorized to search ${Model.modelName}s`,\n        });\n      }\n      const results = await Model.find({ ...query, ...criteria }).exec();\n      if (onResponse) {\n        onResponse(results, req, res);\n      } else {\n        res.status(200).send(results);\n      }\n    } catch (err) {\n      res.status(500).send({ message: `Database connection error: ${err.message}` });\n    }\n  });\n\n  return apiRoutes;\n};\n\nmodule.exports = crudService;\n","const express = require(\"express\");\nconst axios = require(\"axios\");\n\nconst chatGPTService = function(config) {\n  var apiRoutes = express.Router();\n  const openai_key = process.env.OPEN_AI_KEY;\n  // Post route to handle chat requests\n  apiRoutes.post(\"/chat\", async (req, res) => {\n    const { prompt } = req.body;\n\n    if (!prompt) {\n      return res.status(400).send({ message: \"Prompt is required\" });\n    }\n\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"user\",\n            content: prompt\n          }]\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${openai_key}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      res.status(200).send(response.data);\n    } catch (error) {\n      console.error('Error calling OpenAI API:', error.response?.data || error.message);\n      res.status(500).send({ message: \"Failed to fetch response from OpenAI\" });\n    }\n  });\n\n  apiRoutes.post(\"/image\", async (req, res) => {\n    const { prompt } = req.body;\n\n    if (!prompt) {\n      return res.status(400).send({ message: \"Prompt is required for image generation\" });\n    }\n\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/images/generations',\n        {\n          model: \"dall-e-2\",  // Change this according to the specific DALL·E model you have access to\n          prompt: prompt,\n          n: 1,  // Number of images to generate\n          size: \"256x256\"  // The desired size of images\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${openai_key}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      res.status(200).send(response.data);\n    } catch (error) {\n      console.error('Error calling OpenAI API for images:', error.response?.data || error.message);\n      res.status(500).send({ message: \"Failed to fetch images from OpenAI\" });\n    }\n  });\n\n\n\n  return apiRoutes;\n};\n\nmodule.exports = chatGPTService;","const fs = require(\"fs\");\nconst path = require(\"path\");\n\nmodule.exports.executeDomain = (req, res, domainFn) => {\n  //returns criteria\n  let user = req.decoded;\n  if (!user) {\n    console.error(\n      `${req.url} User doesn't exist in domain execute function make sure you have jwt protected routes and try again.`\n    );\n  }\n  return domainFn(user, req, res);\n};\n\nmodule.exports.parseNumberQuery = obj => {\n  Object.keys(obj).map(key => {\n    if (parseInt(obj[key] && obj[key] !== 0)) {\n      obj[key] = parseInt(obj[key]);\n    }\n  });\n  return obj;\n};\n\nmodule.exports.capitalize = function(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nmodule.exports.readFiles = function(dirname, onFileContent, onError) {\n  fs.readdir(path.join(__dirname, dirname), function(err, filenames) {\n    if (err) {\n      onError(err);\n      return;\n    }\n    filenames.forEach(function(filename) {\n      fs.readFile(path.join(__dirname, dirname) + filename, \"utf-8\", function(\n        err,\n        content\n      ) {\n        if (err) {\n          onError(err);\n          return;\n        }\n        onFileContent(filename, content);\n      });\n    });\n  });\n};\n\n","// =================================================================\n// get the packages we need ========================================\n// =================================================================\nconst express = require(\"express\");\nconst http = require(\"http\");\nconst mongoose = require(\"mongoose\");\nconst bodyParser = require(\"body-parser\");\nconst morgan = require(\"morgan\");\nconst config = require(\"config\"); // get our config require(file)\nconst session = require(\"express-session\"); // we remove this require(later)\nconst userModel = require(\"@markab.io/orbital-api/MongoDb/models/user\");\nconst settingsModel = require(\"@markab.io/orbital-api/MongoDb/models/settings\");\nconst permissionsSchema = require(\"@markab.io/orbital-api/MongoDb/models/permissions\");\nconst permissionsModel = mongoose.model(\"Permissions\", permissionsSchema);\nconst kernelModel = require(\"@markab.io/orbital-api/MongoDb/models/kernel\");\nconst formsSchema = require(\"@markab.io/orbital-api/MongoDb/models/forms\");\nconst notificationsSchema = require(\"@markab.io/orbital-api/MongoDb/models/notifications\");\nconst notificationsModel = mongoose.model(\"Notification\", notificationsSchema);\nconst formsModel = mongoose.model(\"Forms\", formsSchema);\n// const orbitalApi = require(\"@markab.io/orbital-api\");\nconst Kb = require(\"./src/knowledge-base/api\");\nconst expressPrintRoutes = require(\"express-print-routes\");\nconst path = require(\"path\");\nconst cors = require(\"cors\");\nconst { connectToDb } = require(\"./utils/utils\");\n\nconst getExpressApp = async (config, isServerless) => {\n  // =================================================================\n  // starting the server ================================================\n  // =================================================================\n\n  // =================================================================\n  // App =============================================================\n  // =================================================================\n  const app = express();\n  app.set(\"superSecret\", config.secret); // secret variable\n  if (!isServerless) {\n    const port = config.get(\"server.port\"); // used to create, sign, and verify tokens\n    const ip = config.get(\"server.host\");\n    var server = http.createServer(app);\n    server.listen(port);\n    console.log(`Magic happens at ${ip}:${port}`);\n  }\n  // =================================================================\n  // configuration ===================================================\n  // =================================================================\n\n  const whitelist = config.get(\"cors.whitelist\");\n  const corsOptions = {\n    origin: function (origin, callback) {\n      console.warn(\"SHALL YOU PASS?\", origin, whitelist);\n      if (!origin) {\n        return callback(null, false);\n      }\n      if (whitelist.find((or) => origin.indexOf(or) !== -1)) {\n        console.warn(\"YOU SHALL PASS\", origin);\n        callback(null, true);\n      } else {\n        callback(null, false);\n      }\n    },\n    credentials: true,\n    exposedHeaders: [\"Content-Length\", \"X-Foo\", \"X-Bar\"],\n  };\n\n  // required for passport session auth\n  //TODO: store in amazon ssm and retrieve using getAWSSecret()\n  app.use(\n    session({\n      secret: \"thecatwentoverthefencebutfoundafoxsosheranaway\",\n      saveUninitialized: true,\n      resave: true,\n    })\n  );\n\n  //CORS\n  app.options(\"*\", cors(corsOptions)); // enable pre-flight request for DELETE request\n  app.use(cors(corsOptions));\n  //CORS\n  app.use(function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Methods\", \"GET,PUT,POST,DELETE\");\n    res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Accept\"\n    );\n    next();\n  });\n  // use body parser so we can get info = POST and/or URL parameters\n  app.use(bodyParser.urlencoded({ extended: false }));\n  app.use(bodyParser.json({ limit: \"50mb\", type: \"application/json\" }));\n  // use morgan to log requests to the console\n  app.use(morgan(\"dev\"));\n  return { server, app };\n};\n\nconst getAllApis = ({\n  server,\n  app,\n  exceptions: { disableChat, disableRides },\n}) => {\n  // Get all available end points\n  const defaultProps = {\n    permissionsModel,\n    formsModel,\n    settingsModel,\n    kernelModel,\n    notificationsModel,\n    userModel,\n    // mediaModel,\n    config,\n  };\n  const { knowledgeApiRoutes } = Kb({\n    ...defaultProps,\n  });\n  // const {\n  //   authApiRoutes,\n  //   userApiRoutes,\n  //   jwtApiRoutes,\n  //   aclApiRoutes,\n  //   formsApiRoutes,\n  //   settingsApiRoutes,\n  //   kernelApiRoutes,\n  //   notificationsApiRoutes,\n  //   mediaApiRoutes,\n  // } = orbitalApi({\n  //   ...defaultProps,\n  // });\n  return {\n    // authApiRoutes,\n    // userApiRoutes,\n    // jwtApiRoutes,\n    // aclApiRoutes,\n    // mediaApiRoutes,\n    // formsApiRoutes,\n    // settingsApiRoutes,\n    // kernelApiRoutes,\n    // notificationsApiRoutes,\n    knowledgeApiRoutes,\n    ...defaultProps,\n  };\n};\n\nconst registerAllRoutes = async ({\n  app,\n  server,\n  exceptions,\n  authApiRoutes,\n  userApiRoutes,\n  jwtApiRoutes,\n  aclApiRoutes,\n  formsApiRoutes,\n  settingsApiRoutes,\n  kernelApiRoutes,\n  notificationsApiRoutes,\n  knowledgeApiRoutes,\n  ridesApiRoutes,\n  mediaApiRoutes,\n  ...defaultProps\n}) => {\n  // const { disableChat, disableRides, disableNotifications } = exceptions;\n  // // Register all end points\n  // // Markab routes\n  // app.use(\"/\", authApiRoutes);\n  // app.use(\"/jwt\", jwtApiRoutes);\n  // app.use(\"/users\", ...userApiRoutes);\n  // app.use(\"/media\", ...mediaApiRoutes);\n  // app.use(\"/settings\", ...settingsApiRoutes);\n  // app.use(\"/acl\", jwtApiRoutes, ...aclApiRoutes);\n  // app.use(\"/forms\", ...formsApiRoutes);\n  // app.use(\"/kernel\", ...kernelApiRoutes);\n  // if (!disableNotifications) {\n  //   app.use(\"/notifications\", ...notificationsApiRoutes);\n  // }\n  // Markab kb\n  app.use(\"/knowledge\", ...knowledgeApiRoutes);\n};\n\n// =================================================================\n// printing all routes to a file =========================================\n// =================================================================\nconst printAllRoutes = (app) => {\n  let filepath = path.join(__dirname, \"./docs/routes.md\");\n  expressPrintRoutes(app, filepath);\n};\n\n// =================================================================\n// Setting up the database =========================================\n// =================================================================\n\nconst main = async ({ exceptions }) => {\n  const { app, server } = await getExpressApp(config);\n  await connectToDb((con) => console.log(\"connected to db\" + con));\n  const {\n    // authApiRoutes,\n    // userApiRoutes,\n    // jwtApiRoutes,\n    // aclApiRoutes,\n    // formsApiRoutes,\n    // settingsApiRoutes,\n    // kernelApiRoutes,\n    // notificationsApiRoutes,\n    knowledgeApiRoutes,\n    ...defaultProps\n  } = getAllApis({ app, server, exceptions });\n  await registerAllRoutes({\n    app,\n    server,\n    exceptions,\n    // authApiRoutes,\n    // userApiRoutes,\n    // jwtApiRoutes,\n    // aclApiRoutes,\n    // formsApiRoutes,\n    // settingsApiRoutes,\n    // kernelApiRoutes,\n    // notificationsApiRoutes,\n    knowledgeApiRoutes,\n    ...defaultProps,\n  });\n  return { app, exceptions };\n};\nmodule.exports = main;\nmodule.exports.getAllApis = getAllApis;\nmodule.exports.registerAllRoutes = registerAllRoutes;\nmodule.exports.getExpressApp = getExpressApp;\n","//the crud service creates [create, read, update, del] endpoints for a mongoose model\nconst crudService = require(\"../../../Libs/node-services/crud-service/crud-service\");\nconst mediaService = require(\"@markab.io/node/media-service/media-service\");\nconst vizService = require(\"@markab.io/node/viz-service/viz-service\");\nconst gptService = require(\"../../../Libs/node-services/gpt-service/gpt-service\");\nconst {\n  formsService,\n  registerForms,\n} = require(\"@markab.io/node/forms-service/forms-service\");\nconst {\n  registerAction,\n  isPermitted,\n} = require(\"@markab.io/node/acl-service/acl-service\");\nconst Knowledge = ({\n  config,\n  knowledgeModel,\n  permissionsModel,\n  lambdaModel,\n  formsModel,\n  autoPopulateDB=false,\n}) => {\n  let modelName = \"knowledges\";\n  let crudDomainLogic = {\n    create: (user, req) => {\n      return {\n        isPermitted: isPermitted({ key: `${modelName}_create`, user }),\n        criteria: {},\n      };\n    },\n    read: (user, req) => {\n      const query = req.query && req.query.query;\n      return {\n        isPermitted: isPermitted({ key: `${modelName}_read`, user }),\n        criteria: {\n          query,\n        },\n        exclude: query && query._id ? [] : [\"body\"],\n      };\n    },\n    update: (user, req) => {\n      return {\n        isPermitted: isPermitted({ key: `${modelName}_update`, user }),\n        criteria: {},\n      };\n    },\n    del: (user, req) => {\n      return {\n        isPermitted: isPermitted({ key: `${modelName}_delete`, user }),\n        criteria: {},\n      };\n    },\n    search: (user, req) => {\n      return {\n        isPermitted: isPermitted({ key: `${modelName}_search`, user }),\n        criteria: {},\n        onResponse: (data, req, res) => {\n          let formattedData = data.map((d) => {\n            return { _id: d._id, title: d.title };\n          });\n          return res\n            .status(200)\n            .send({ data: formattedData, count: formattedData.length });\n        },\n      };\n    },\n  };\n  const knowledgeApi = crudService({ Model: knowledgeModel, crudDomainLogic });\n\n  let vizDomainLogic = {\n    average: (user, req, res) => {\n      //this should return a criteria\n      return {};\n    },\n    min: (user, req, res) => {\n      return {};\n    },\n    max: (user, req, res) => {\n      return {};\n    },\n    sum: (user, req, res) => {\n      return {};\n    },\n    count: (user, req, res) => {\n      return {};\n    },\n    distinct: (user, req, res) => {\n      return {};\n    },\n  };\n  const vizApi = vizService({\n    Model: knowledgeModel,\n    domainLogic: vizDomainLogic,\n  });\n\n  const gptApi = gptService(config);\n  //file upload api\n  let mediaDomainLogic = {\n    getMedia: (user, req, res) => {\n      return {\n        criteria: {\n          tag: user._id,\n          token: user.jwtToken,\n          query: { _id: req.query.query },\n        },\n        isPermitted: true,\n      };\n    },\n    saveMedia: (user, req, res) => {\n      return {\n        criteria: {\n          token: user.jwtToken,\n          query: { _id: req.query.query, fileName: req.query.fileName },\n        },\n        isPermitted: true,\n      };\n    },\n  };\n  const fileUploadApi = mediaService({\n    fileName: \"knowledges\",\n    modelName,\n    mediaDomainLogic,\n    Model: knowledgeModel,\n    fileExtension: \".jpg\",\n  });\n\n  //forms api\n  let formsDomainLogic = {\n    read: (knowledge) => {\n      return { criteria: { key: `${modelName}` }, isPermitted: true };\n    },\n  };\n  const formsApi = formsService({\n    Model: formsModel,\n    formsDomainLogic,\n  });\n  if (autoPopulateDB) {\n    registerAction({\n      key: `${modelName}`,\n      domainLogic: crudDomainLogic,\n      permissionsModel,\n      defaultPermission: false,\n    });\n    registerAction({\n      key: `${modelName}`,\n      domainLogic: mediaDomainLogic,\n      permissionsModel,\n    });\n    registerForms({\n      key: `${modelName}`,\n      fields: [\n        {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Knowledge Title\",\n          value: \"\",\n          required: true,\n        },\n        {\n          type: \"array\",\n          name: \"tags\",\n          placeholder: \"Tags\",\n          value: [],\n          required: false,\n        },\n      ],\n      formsModel,\n    });\n  }\n\n  return [knowledgeApi, fileUploadApi, vizApi, formsApi, gptApi];\n};\n\nmodule.exports = Knowledge;\n","const knowledgeSchema = require(\"@markab.io/orbital-api/MongoDb/models/knowledges\");\nconst knowledgeApi = require(\"./Knowledge\");\nconst lambdaModel = require(\"@markab.io/orbital-api/MongoDb/models/lambda\");\nconst mongoose = require(\"mongoose\");\n\nconst Api = ({\n  config,\n  userModel,\n  settingsModel,\n  formsModel,\n  permissionsModel,\n  kernelModel,\n  notificationsModel\n}) => {\n  const knowledgeModel = mongoose.model(\"knowledges\", knowledgeSchema);\n  const defaultProps = {\n    kernelModel,\n    permissionsModel,\n    settingsModel,\n    formsModel,\n    notificationsModel,\n    lambdaModel,\n  };\n  let knowledgeApiRoutes = knowledgeApi({\n    config,\n    knowledgeModel,\n    ...defaultProps,\n  });\n  return {\n    knowledgeApiRoutes,\n  };\n};\n\nmodule.exports = Api;\n","const MongoDb = require(\"@markab.io/orbital-api/MongoDb\");\nconst config = require(\"config\");\nconst fs = require(\"fs\");\nconst { v4 } = require(\"uuid\");\nconst path = require(\"path\");\nmodule.exports.readFiles = function readFiles(dirname, onFileContent, onError) {\n  return fs.readdir(path.join(__dirname, dirname), function (err, filenames) {\n    if (err) {\n      onError(err);\n      return;\n    }\n    filenames.forEach(function (filename) {\n      fs.readFile(\n        path.join(__dirname, dirname) + filename,\n        \"utf-8\",\n        function (err, content) {\n          if (err) {\n            onError(err);\n            return;\n          }\n          onFileContent(filename, content);\n        }\n      );\n    });\n  });\n};\nmodule.exports.connectToDb = async function connectToDb(cb) {\n  const dbConnection = await MongoDb({\n    config,\n    onDBInit: (data) => cb(null, data),\n    onError: (err) => cb(\"err\", err),\n    onDisconnect: (err) => cb(\"disconnect\", err),\n  });\n  return dbConnection;\n};\nmodule.exports.formatMindmap = function formatMindmap(node, path) {\n  if (node) {\n    Object.keys(node).map((key, index) => {\n      let currentPath = path ? path + \".\" + `${index}` : \"0\";\n      node[key].level = currentPath;\n      node[key]._id = v4();\n      return formatMindmap(node[key].ideas, currentPath);\n    });\n  }\n  return;\n};\n\n//TODO: flatten mindmap prior to saving and add links for graph viz\nmodule.exports.flattenMindmap = function flattenMindmap(\n  node,\n  parent,\n  mindmapByKeys\n) {\n  if (node) {\n    let group = parent && parseInt(parent.level.split(\".\").join(\"\"));\n    let size = 20 / (parent && parent.level.split(\".\").length);\n    Object.keys(node).map((key, index) => {\n      let currentNode = node[key];\n      // console.log(currentNode, \"NODOODE\");\n      // currentNode = this.formatMindmap\n      const { title } = currentNode;\n      mindmapByKeys[currentNode._id] = {\n        title,\n        id: currentNode._id,\n        _id: currentNode._id,\n        size,\n        group: group,\n        level: currentNode.level,\n        attr:\n          currentNode.attr &&\n          currentNode.attr.note &&\n          currentNode.attr.note.text,\n        children: currentNode.ideas\n          ? Object.keys(currentNode.ideas).map((k) => {\n              return currentNode.ideas[k]._id;\n            })\n          : [],\n        parent: parent && parent._id,\n        links: {\n          title: parent && parent.title,\n          target: currentNode._id,\n          source: (parent && parent._id) || currentNode._id,\n          group: group,\n        },\n      };\n      flattenMindmap(currentNode.ideas, currentNode, mindmapByKeys);\n    });\n  }\n  return;\n};\n","module.exports = require(\"@markab.io/node/acl-service/acl-service\");","module.exports = require(\"@markab.io/node/forms-service/forms-service\");","module.exports = require(\"@markab.io/node/media-service/media-service\");","module.exports = require(\"@markab.io/node/viz-service/viz-service\");","module.exports = require(\"@markab.io/orbital-api/MongoDb\");","module.exports = require(\"@markab.io/orbital-api/MongoDb/models/forms\");","module.exports = require(\"@markab.io/orbital-api/MongoDb/models/kernel\");","module.exports = require(\"@markab.io/orbital-api/MongoDb/models/knowledges\");","module.exports = require(\"@markab.io/orbital-api/MongoDb/models/lambda\");","module.exports = require(\"@markab.io/orbital-api/MongoDb/models/notifications\");","module.exports = require(\"@markab.io/orbital-api/MongoDb/models/permissions\");","module.exports = require(\"@markab.io/orbital-api/MongoDb/models/settings\");","module.exports = require(\"@markab.io/orbital-api/MongoDb/models/user\");","module.exports = require(\"axios\");","module.exports = require(\"body-parser\");","module.exports = require(\"config\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"express-print-routes\");","module.exports = require(\"express-session\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"uuid\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const main = require(\"./server.js\");\nmain({ exceptions: {} });\n"],"names":["express","require","executeDomain","crudService","Model","crudDomainLogic","create","read","update","del","search","apiRoutes","Router","get","req","res","criteria","isPermitted","populate","onResponse","exclude","query","status","send","message","modelName","exclusionList","map","ex","join","data","find","sort","Array","isArray","select","exec","count","length","err","page","limit","params","countDocuments","paginate","parseInt","docs","post","newModel","body","model","joiValidate","error","save","put","Object","assign","updatedModel","findOneAndUpdate","_id","new","upsert","delete","requestModelID","deleteOne","results","module","exports","axios","chatGPTService","config","openai_key","process","env","OPEN_AI_KEY","prompt","response","messages","role","content","headers","_error$response","console","n","size","_error$response2","fs","path","domainFn","user","decoded","url","parseNumberQuery","obj","keys","key","capitalize","string","charAt","toUpperCase","slice","readFiles","dirname","onFileContent","onError","readdir","__dirname","filenames","forEach","filename","readFile","http","mongoose","bodyParser","morgan","session","userModel","settingsModel","permissionsSchema","permissionsModel","kernelModel","formsSchema","notificationsSchema","notificationsModel","formsModel","Kb","expressPrintRoutes","cors","connectToDb","getExpressApp","isServerless","app","set","secret","port","ip","server","createServer","listen","log","whitelist","corsOptions","origin","callback","warn","or","indexOf","credentials","exposedHeaders","use","saveUninitialized","resave","options","next","header","urlencoded","extended","json","type","getAllApis","exceptions","disableChat","disableRides","defaultProps","knowledgeApiRoutes","registerAllRoutes","authApiRoutes","userApiRoutes","jwtApiRoutes","aclApiRoutes","formsApiRoutes","settingsApiRoutes","kernelApiRoutes","notificationsApiRoutes","ridesApiRoutes","mediaApiRoutes","printAllRoutes","filepath","main","con","mediaService","vizService","gptService","formsService","registerForms","registerAction","Knowledge","knowledgeModel","lambdaModel","autoPopulateDB","formattedData","d","title","knowledgeApi","vizApi","domainLogic","average","min","max","sum","distinct","gptApi","mediaDomainLogic","getMedia","tag","token","jwtToken","saveMedia","fileName","fileUploadApi","fileExtension","formsApi","formsDomainLogic","knowledge","defaultPermission","fields","name","placeholder","value","required","knowledgeSchema","Api","MongoDb","v4","cb","onDBInit","onDisconnect","formatMindmap","node","index","currentPath","level","ideas","flattenMindmap","parent","mindmapByKeys","group","split","currentNode","id","attr","note","text","children","k","links","target","source","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","prop"],"sourceRoot":""}