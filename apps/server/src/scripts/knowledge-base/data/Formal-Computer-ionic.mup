{
  "id": "root",
  "formatVersion": 3,
  "ideas": {
    "1": {
      "id": 1,
      "title": "ionic",
      "attr": {
        "style": {},
        "position": [
          -20,
          -15,
          1
        ]
      },
      "ideas": {
        "1": {
          "title": "Concepts",
          "id": "2.352dae35cf47103c",
          "ideas": {
            "1": {
              "title": "Native Plugins",
              "id": "11.ebc6.ef4413365-f6c7.9fa73f111",
              "ideas": {
                "1": {
                  "title": "Push notification",
                  "id": "12.ebc6.ef4413365-f6c7.9fa73f111",
                  "ideas": {
                    "1": {
                      "title": "https://capacitorjs.com/docs/apis/push-notifications",
                      "id": "13.ebc6.ef4413365-f6c7.9fa73f111"
                    }
                  }
                }
              }
            },
            "2": {
              "title": "Capacitor community plugins",
              "id": "17.9165.ccbd1e39e-c18c.f0144bbd8",
              "ideas": {
                "1": {
                  "title": "https://github.com/capacitor-community/barcode-scanner",
                  "id": "18.9165.ccbd1e39e-c18c.f0144bbd8"
                }
              }
            },
            "3": {
              "title": "How should we architect it with NGRX?",
              "id": "19.9165.ccbd1e39e-c18c.f0144bbd8",
              "ideas": {
                "3": {
                  "title": "or we add them in common?",
                  "id": "22.9165.ccbd1e39e-c18c.f0144bbd8"
                },
                "4": {
                  "title": "rules",
                  "id": "23.9165.ccbd1e39e-c18c.f0144bbd8",
                  "ideas": {
                    "1": {
                      "title": "we use state to sync changes",
                      "id": "24.9165.ccbd1e39e-c18c.f0144bbd8"
                    },
                    "2": {
                      "title": "we use capacitor or capacitor community plugins",
                      "id": "25.9165.ccbd1e39e-c18c.f0144bbd8"
                    }
                  }
                },
                "5": {
                  "title": "Challenges",
                  "id": "26.9165.ccbd1e39e-c18c.f0144bbd8"
                }
              }
            },
            "4": {
              "title": "How to style inside a shadow dom",
              "id": "27.9165.ccbd1e39e-c18c.f0144bbd8",
              "ideas": {
                "1": {
                  "title": "::part(placeholder)",
                  "id": "28.9165.ccbd1e39e-c18c.f0144bbd8"
                },
                "2": {
                  "title": "https://ionicframework.com/docs/theming/css-shadow-parts",
                  "id": "29.9165.ccbd1e39e-c18c.f0144bbd8"
                }
              }
            },
            "5": {
              "title": "When theming, follow Ionic guide",
              "id": "30.9165.ccbd1e39e-c18c.f0144bbd8",
              "ideas": {
                "1": {
                  "title": "https://ionicframework.com/docs/theming/themes",
                  "id": "31.9165.ccbd1e39e-c18c.f0144bbd8"
                }
              }
            },
            "6": {
              "title": "Pwa Elements?",
              "id": "32.9165.ccbd1e39e-c18c.f0144bbd8",
              "ideas": {
                "1": {
                  "title": "https://github.com/ionic-team/pwa-elements",
                  "id": "33.9165.ccbd1e39e-c18c.f0144bbd8"
                }
              }
            },
            "7": {
              "title": "Ionic page events are different from Angular page events",
              "id": "34.9165.ccbd1e39e-c18c.f0144bbd8",
              "ideas": {
                "1": {
                  "title": "https://ionicframework.com/docs/angular/lifecycle#ionic-page-events",
                  "id": "35.9165.ccbd1e39e-c18c.f0144bbd8"
                },
                "2": {
                  "title": "ionViewDidEnter - If you see performance problems from using ionViewWillEnter when loading data, you can do your data calls in ionViewDidEnter instead. This event won't fire until after the page is visible by the user, however, so you might want to use either a loading indicator or a skeleton screen, so content doesn't flash in un-naturally after the transition is complete.",
                  "id": "36.9165.ccbd1e39e-c18c.f0144bbd8"
                },
                "4": {
                  "title": "Very important!!!",
                  "id": "38.9165.ccbd1e39e-c18c.f0144bbd8",
                  "ideas": {
                    "1": {
                      "title": "ionViewWillLeave - Can be used for cleanup, like unsubscribing from observables. Since ngOnDestroy might not fire when you navigate from the current page, put your cleanup code here if you don't want it active while the screen is not in view.",
                      "id": "37.9165.ccbd1e39e-c18c.f0144bbd8",
                      "attr": {}
                    }
                  }
                }
              }
            },
            "8": {
              "title": "Use track by in *ngFor",
              "id": "39.9165.ccbd1e39e-c18c.f0144bbd8",
              "ideas": {
                "1": {
                  "title": "https://ionicframework.com/docs/angular/performance",
                  "id": "40.9165.ccbd1e39e-c18c.f0144bbd8"
                }
              }
            },
            "9": {
              "title": "Live reload",
              "id": "41.11e4.59bd3aef9-7f44.daceddca9",
              "ideas": {
                "1": {
                  "title": "https://ionicframework.com/docs/developing/android",
                  "id": "42.11e4.59bd3aef9-7f44.daceddca9"
                }
              }
            },
            "10": {
              "title": "Ion-router-outlet",
              "id": "43.11e4.59bd3aef9-7f44.daceddca9",
              "ideas": {
                "1": {
                  "title": "it maintains its own navigation stack",
                  "id": "44.11e4.59bd3aef9-7f44.daceddca9"
                },
                "2": {
                  "title": "it keeps the views loaded in the background, but hides them",
                  "id": "45.11e4.59bd3aef9-7f44.daceddca9"
                }
              }
            }
          }
        },
        "-1": {
          "title": "Resources",
          "id": "3.352dae35cf47103c",
          "ideas": {
            "1": {
              "title": "Mindmaps",
              "id": "4.352dae35cf47103c",
              "ideas": {
                "1": {
                  "title": "Angular",
                  "id": "5.352dae35cf47103c",
                  "ideas": {}
                }
              }
            },
            "2": {
              "title": "Ionic documentation",
              "id": "6.ebc6.ef4413365-f6c7.9fa73f111",
              "ideas": {
                "1": {
                  "title": "https://ionicframework.com/",
                  "id": "9.ebc6.ef4413365-f6c7.9fa73f111"
                }
              }
            },
            "3": {
              "title": "UI Components",
              "id": "14.ebc6.ef4413365-f6c7.9fa73f111",
              "ideas": {
                "1": {
                  "title": "https://ionicframework.com/docs/components",
                  "id": "15.ebc6.ef4413365-f6c7.9fa73f111"
                }
              }
            }
          }
        }
      }
    }
  },
  "links": [],
  "attr": {},
  "title": "ionic"
}